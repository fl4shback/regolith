name: Build and Release on Tag

on:
  push:
    tags:
      - 'v*'  # Triggers on new tags that start with "v"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.13]

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # Build with PyInstaller
      - name: Build executable with PyInstaller
        run: pyinstaller --onefile regolith.py

      # Upload the built executable as an artifact
      - name: Upload Linux executable
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-executable
          path: dist/regolith

      - name: Upload macOS .app bundle
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: dist/regolith.app

      - name: Upload Windows executable
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-executable
          path: dist/regolith.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux executable
        uses: actions/download-artifact@v3
        with:
          name: linux-executable
          path: ./dist/linux

      - name: Download macOS .app bundle
        uses: actions/download-artifact@v3
        with:
          name: macos-app
          path: ./dist/mac

      - name: Download Windows executable
        uses: actions/download-artifact@v3
        with:
          name: windows-executable
          path: ./dist/windows

      # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatic release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false

      # Upload assets to release
      - name: Upload Linux executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/linux/regolith
          asset_name: regolith-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS .app bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/mac/regolith.app
          asset_name: regolith-macos.app.zip
          asset_content_type: application/zip

      - name: Upload Windows executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows/regolith.exe
          asset_name: regolith-windows.exe
          asset_content_type: application/octet-stream
